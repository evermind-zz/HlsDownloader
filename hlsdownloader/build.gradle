plugins {
    id 'java-library'
    id 'maven-publish'
}

sourceSets {
    main {
        java.srcDirs += '../lib/legacy-file-utils/src'
    }
}

dependencies {
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.platform.launcher
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.junit.jupiter.params
}

// Create the sources JAR, excluding specific directories
task customSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource

    // Exclude git submodule directories or files
    exclude 'com/github/evermindzz/legacyfilesutils/**'
}

// Create the Javadoc JAR, excluding certain packages
task customJavadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc

    // Exclude git submodule packages/classes from the Javadoc
    exclude 'com/github/evermindzz/legacyfilesutils/**'
}

// Add them to the publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact customSourcesJar
            artifact customJavadocJar
        }
    }
}

java {
    //withSourcesJar()
    //withJavadocJar()
}

test {
    useJUnitPlatform()
}

tasks.named('publishMavenJavaPublicationToMavenLocal') {
    dependsOn tasks.named('customSourcesJar')
    dependsOn tasks.named('customJavadocJar')
}
